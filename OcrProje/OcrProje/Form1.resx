<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAkYAAACfCAIAAACTEYH1AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAF0FJREFUeF7tnW1i46oOQO+6uqCup6uZzXQx7wEWmA8JQ4LbhJ7zZ6ZISELIyInT
        5r//AQAAbAEtDQAANoGWBgAAm0BLAwCATaClAQDAJtDSAABgE2hpAACwCbQ0AADYBFoaAABsAi0NAAA2
        gZYGAACbQEsDAIBNoKUBAMAm0NIAAGATaGkAALAJtDQAANgEWhoAAGwCLQ0AADaBlgYAAJtASwMAgE2g
        pQEAwCbQ0gAAYBNoaQAAsAm0NAAA2ARaGgAAbAItDQAANoGWBgAAm0BLAwCATaClAQDAJtDSAABgE2hp
        AACwCbQ0AADYBFoaAABsAi0NAAA2gZYGAACbQEsDAIBNoKUBAMAm0NIAAGATaGkAALAJtDQAANiEvVva
        99fHf46Pr28ZWMNNZlV+0hfA9mxwJkAPWtoD0NIA3hRa2uasbGnf/z79rno+Pge2VqrAc1MlbFC+r3Op
        uEgcaWO/vz7zHxfz/e/L2/dLP3Cu/lmuppS3ZDYDTj9X9/toqN9n+ZfY4EyAHktb2rGrwuc/GbY4G6Dj
        UvshNijfl7lU4u5KJNWPK/knphXa03RKeUumM/Dv05hQX4T3Wf5FNjgToMcNLc3du/t/LnZXlD8/j8ZG
        SzN4nUvluAX5+JKdkh9v2Dhn+bi5T0t2r/+PmmoTMaX8Dsid3nhe5zIg9RQ2MopO/VL9Psu/yAZnAvS4
        o6V9yd1db3vThTt9Bc+wQflyqRxIHsYyMaX8Yqy5IKwMiPUmL0n/0u99ln8GiWd1ZdxkFqa5paV9xzI2
        q/iof7//tLQ+XCpCrKmhTEwpvxaLLgg1A3FQM261pIb7LP8IEunqaG4yC9Pc09K6FV5uf+8KHnjULKb8
        dOVNkdxRMBakDsWSR3kWrj0Mt83qj84HzapM+cqVS4w0B4tZYDmnlSmzohyG/JacAes5H0XsalG0zChb
        ARcJNgUnc8XTVmyMuWFoxTVqBrrNZbTz3GE52qzrM6ALq9J1uR4rL7EWgikvqGVnQs7gdFjGTS2tW8ai
        d1So6DW1HOvY46og+6GwGG19ZeoOMRcj+swq96SKTSIJeI+Zyyq6vtlqLeNmVaZ8ReU26VqaRdtTBnb8
        fOpOmRXlekcErR7GiHkcSdqUcjdgF6/ea54tnrZiQ9fMJ0aGVlyjZSAuRDcoMy536BbLHQOKKA55fIbk
        vwPBp7l3nQnF/PHpsIzbWppdxyKQPS1/isRaKGa7a/4YtYo73v24Uyj8W0njTdh5c1x4ddZPHSEaKFeh
        mz3jK9THzapM+RJlxayoK5nLbxm/vxo1z4xZI2Aj5+PE9Q5Nn1IuA07xZqOOTLC0eKLV8xMYSkofQM2A
        DBpVFwO78HyTZVOnFcQICm/pgrgIv8r/RX06o3PbWg6OT4dl3NfS9E2OBZlGpRKLQjJmOhrtWCB6KSdp
        bSoKruq/G58SYZQooZdoZlWmfMmQ4t1KXK0qw2VcE2bPsCzTA2tuET9aCC1TynbAadwSXC9E2+XTrD5f
        mzOLkQEZNvIytKz7LBtKMnxabgYSY5mLfhoLQ1EGNEd2WA1jccKD3NjS1Bppdl7Z31511Or9SrKlYseY
        l6GZ6DgV0WW99uPOmPJlKzdpNlRluAx/wuyAsraUPjJxbOaUsscM2IxXWbWOZtrOz8GwcRMzA+aCAhJY
        z/N9lj2akSZbvfSJgb4b20B/ERmaiV5cFROqMM+dLS0OZDXWFp1ShjLkLLWIJKn3y8OWmpJv/8j4MzzV
        OPBqlWLPqXFdjJhVmfJlK7dpFl03dCrHscrAjNmOsi3pEWMamjelLJhhmQJl1QfPFo/HND5GLwNNvRTE
        mZbn+yxHWittskTHjbWIpO+mNRkxJU9u68PXPjzCrS2tKVL5Ma85e6hD+n3fXiU55sr3fD+9pVTsOG1l
        w2ZVpnzZykqa8zxnV5oyfcqsrdxbioFMGZs0pXxihmUKtGQuKR6PZnyUiwxEsW67G9h9lnNk7UlRJuZW
        s6I1OA8HFTsYTfLktj537cMj3NzSiiJVd125guvC7mEXqMeWtpJ4rXx8fp3P6nUTPad18BNmVWZ8dZRF
        NUvzMfLhbx+DyGN8EnrGbEd5eM2COw+8/tiMKeUCMyxTYCXT6T5XPB4lpWMMZEA0dAXb8X2Wa0oz2ryu
        oxHs/LcScfbotk5Mh2Xc3dLioKtLfSeVsj2nyECHfnnY0kZiXSqaiY5TEaXYZ8yqTPjqKTdpPgZGUjxl
        tqfcWYqCmHbnwUCMU8oVZlimwEhmq6lZuMqCktIRhjIgvlXj1hputKyQZ0fNRM/REHb+G4kVuGZCGZuZ
        Dsu4vaXF0UhdilrdxikDZdsvD1vaSNTrx6HVZVpSY1i0TzMzZlUmfJ3KtW4yknTjSP4kzWTcrEMGlZXZ
        kob0fk2TOIUp5RYzLFPQbOrMLl9lYbgyMoYzIM5b65bgPssGZ3qMpEZ7VwFZnA5kINFIntzWmemwjPtb
        WqrBgLW/1biMOlvVkfvtKj39No/DLlCPLW0kMcpc139/ShisTOQrOt9U+D5/lelczYxZlQlfjqSdEucf
        TZ8W2sBywhM15yT7O7UH42aTrrIyW1KSvFVFoTKlrGKGZQqamo1B5KoXxWNmobb1nf3OmkqcMJeu7CKy
        iulGyx2SnYCWpuHDQUXsK4YbSQwl153Y1pnpsIwfaGlnDWq7qLc0Px633nGctfJDYcb0GbCliiRFefg7
        /xv+yU0ck90VdRipqLyNm1WZ8uWQhZW46/z4Jeo8ze7qCkLJbpZfR214xmzQVFZmSwqyhBlk7qaUdcyw
        TIFSs7PF08mCKJz0EzadgeLKyqn93Ge5S75+Y+Lg4aBi51+RPLmt49NhGT/S0mIJapsou64dPOHDr1mx
        +lqoX0LYPj1T5evwd3nJn3xW4giwUDwmh6Hi1Yrx6YpRsyqzvhylO1E7/GVpNgJIN9aKZMTsdM4bDpM9
        mlX00CqrwAzLFIjTyvJU8fSzkN3L+0x38/VIBqoLy6il+yxfkBx3kjRyOKjM1ueT2/rMtQ+PsLKlwfvQ
        u6rkRLnsBQAALwYt7U8i95Rq1xp5GQEA8IrQ0v4k0rZ8Uysbl/2+IwDAy0NL+6P8a5+wnwOXHxsDAHhF
        aGl/l+YJu+9tQ4/YAQBeEloaAABsAi0NAAA2gZYGAACbQEsDAIBNoKUBAMAm0NIAAGATaGkAALAJtDQA
        ANgEWhoAAGwCLQ0AADaBlgYAAJvwni2Nb/R6kt9MIF9eM87yXE0anKiT8F2X+Z+7bgZgGg66eWhpfxJa
        2nvwTi0tWM40w1x2+Sk46OahpVn4L8t3XHxN/o9wLDdfbTsyx29eKre2tPt27Vfq4Y1aWlWT7jXa8Eyw
        +M3r9F2hpRnItf8K95lHKHkc7cgkv3mpLD+mM+7btd+ph+W5mjQ4VSdniuI3Fv1ornaEljYPLc1Cvt75
        4+vXy+lYbX48tCOT/OalsvyYzrlv136lHt6qpTnr/gv4wgzn4hXe33h3fvM6fVdoaS+PnELZYtuRWbZt
        aZvxZi0NFkP+56GlvTzHKZQfQu3ILLS094CW9rch//Osb2nVt//7B+r5J3uPS0rfJFWYv5nhrXlj9k6v
        865c/FGj4fEj5zt81FnMxOUJ/7785xEyYUQGwsj1p6RXJjAgafCTffRBz2meOSht1DEqiU087V01nk0J
        c9KkPDJTICiWZailWdvAulT05cRl50E6D4UL50OrDdXgQYgxTHXIZKVOTAvVGgtObX1Fx+AvblAiTsmX
        nNCFTxftwWD+hTmnRfL8e8JN9vZhbUvLSyg/e9uSVnepFZ3bnxMtVzbWepefn7xCuuirSxFIPfe5cL06
        gR5R+/wq0yHGMiOZjcyCktjASu9DUw6c6nfuOlEFqFhWp3mKqblWZ10qitNYFe7Mk5GyUryLzIe+xY3r
        8TrRLWSLLAM4fj4NqNNl8Jc2qCTOqRLnUUS5h2LdQws8Df3gdSp0UvDerGxp6WLLk+VuD47RuC1KXRy0
        guzqFYvFnUxpYs57s6GNdxno7rxYf6w62tWFe6na3qGWDx2RjThtXTydQEdMlSdZdsdO+Ff0zzUFGx+Z
        UT2xa7zrxvUp8nmPSCaIGSrSo4ddIuHmOsPrUqmdxtBcsMfAgTPX3HnHRaupqFaRgkzbZteJZiH6Knb9
        6zBaLVENIM73/PQGNcRgGqVzlTIwvrn6AmPRTuX/UaexPIzs7cO6lmZXlGQ7ZrCtjEAzP+qZpaVs37X3
        +HOl2c63LUaUKhonLqKZ7ASFz8NLrtaO6EQXzRKiILdhL7dO4DldiUFkveA0T4u8G4bSlMr+acoQ5B5U
        ywVKPdiTmnWpFPNjVJ0QCjQXWkCm3Si4yoNm1CHD5RJV3eSoMpHGLcFFYBXKBqmInu7zHLUdNpk/F6L4
        jsLGUJqVTXrEaa0cBVd5eE+WtTQ71W2ytZJp5vfybu3eOu99kx7NzDi91RUcim1g1357Lp5KYE/3TEu8
        32xQpi/zrkvNKeYeNvm58qvbmlmXymlA/mf7b9G8K2PRshbJWB40Rw4ZLu2quoaB+zfIQFNtzPf81eH1
        dEU2lv81TidS8X4sa2mSJZenFpGcG9OmtE1/L+315q333i+efnQjDM8/FM/g48joTF1RZI8lsJ8ZkXr0
        x9DK9OXeS6k5xRQ0+bnyqyd7Zl0q4jTR1f7271Z9fop9xzGniElZhR76wWAeYpjlG4/HWGVXm64PekzB
        og2yaLVb66LjxlpEksLrxdaLrFnmGqf9VL0561uaSf5LqvU2So7zCn1sp01y7/WONuY8j1bhGKrLAv8A
        6qzTrIRlIIx05neDbNzLQIczgZcXRPkgoO5syvR13lWpOcUUKNvT82ulemZdKsmpPJjS3Tu99ICkpZii
        rMIK3jOch2ylZZHWVtXpZm5NwXBgB701qtTGFH/Zkg3GirYXW+N2jdNeOG/P6pY2mqVSvdk5R89goz/p
        XbZUDGjee9s+6Uzl0kYMsU8vhp6LZskzaxq9IIrOdrpSpq/zrkrNKaagyU/Prx39zLpUMqfy36ZOHeLG
        3zukTxw4tIiVsV6Qg3k41D78S0T/n4D2sXKHNl0f9JiCwcAOeiu0EGviQXE3ZdWOrW+n8bvGaS+ct2f1
        s7Ry1zvkWdUKpmuwmfCg96Cvei8DzJkpKpvBgEUt1zr8Dyy05+KpBFqZ0YmWk7oyfZ13VWpOMQVKTVi6
        vXqQOUPrUimdiqvalxWBFrEy1gtyLA+H1tgitaD0QY8pGAssYKXnAjEXXCjeSoUrzHU4enYax2uc9sJ5
        e5a1tKlke860qgWTtrM1qH0Kddb7WSyGd2PbRfv5YjBX599DSoNHELk3CWtknXclUM+MSa2uTV/mXZWa
        U0yBUhS67kU9yKSRdanUTqO9wqASbECLTVvFVJ0oFs5F6kko0ALQBz2mYNUG9Ug+FGeec90yYGOuwzOV
        /yVOu+G8O+ta2rk1H/UbDuFPZDQFHzfnwE68k+W/rpFNKrZ10nvSDwxuu8zplsKIjkdZXXokkhZ2GMtt
        tSM2NyVQy4zgRPWTs+gw+dKnr/DuUKXmFFMg0eT50XRFzYglMLwuldapjORjcSgPw38VThisolNXfNoc
        qBPFQpqfEZ6ohVrIPfUDKAc9pmDdBnWIexfQbAxvrrmOgEidfCD/K5z2w3lzVrY0n+1sH46ilh+0/KWd
        dOjZzTVO3LYdT8uLnZ71nhes5l3Z9qLEC06tGLK+oAJ9dUWLOzSydbYjXXQXTyZQjHaS5imnt0topj/v
        3aFKzSmmQHY6z4+iO1IPw+tSUQNMblN4eSmf5uV/xWRjxTJcodaJaiH+XrWsL1uh4zoAI6qOYOUG2eR5
        1ScsKdokr7jtOr0K561Z29Ic7lbB3SCWKW/v1YRUMnZygznRcnryEuCYWO20Y8p7qiPVu7LtI1dINDpY
        Lv7Gql1e5HCYmzrMDxoPrE9g/4KoDNSv2rrTF3jXpOYUUyA7verEnCrLHCNAGc7Hi0KSpLflY694uE40
        C4ojjzPZxqkFYEZlChZvkIXY7Oo/X7SB0fwfPOd0IJz3ZXlLeyek4lfubLwG2iIE2BOjoQWU1vNW3HBE
        wL385ZZ2w+X27lcwwCxyF6fW/Lu/HOB6fj/+bku74fXUYZI7OvhLxAvJXUll4WvvO74VNxwRcDt/tqXd
        UK7hlo6GBn8N5eMK50D2aac3g472lvzVlibl6q43GQCAh2k+ruB7W/15hfeCI+I9+dMfDwEAgJ2gpQEA
        wCbQ0gAAYBNoaQAAsAm0NAAA2ARaGgAAbAItDQAANoGWBgAAm0BLAwCATaClAQDAJtDSAABgE36kpfEV
        DeOQKwCAR6GlvRjkCgDgUWhpL4aSq2//N8793zXna2sAAHrQ0l6MNlfxa5v4KjYAgD60tBdDyZV8OfDH
        F/kDAOhBS3sxyBUAwKPQ0l4McgUA8CjLW1r4wvZwKjs+Pj7/ffeO6err3Y/vdhfZ+RRJPd9boTNWflm8
        /0xFZk6QiWHe979zQqFsCgboLypjMFfxG+Pjo7TJtHiqkCQzdVBZZvz6g+bptw7jpIk5BtHA40AAuJO1
        Le08B3Pc+Rn+rY7g/Nzzn+iT/+bnnn4+B2qRHKsBby0zp/v9/NLOXef7Wz2QBw/jgUUJ47kSmw+lxeE/
        MBnGWqrUyOQ6M6LUhJGgpQHAa7CypcWucr6oKV6GlCdwUs4POffa4BiNqubh3QjczObVUFQqD9L8vE2h
        ukjPUUcmiCtoYmgZW5QnaQ7kSgLOjOoLczRpSY4yT8FXdKU4CpwJiC/m2jAi4qOTINFQ5gIArGNdS7s8
        ZvMjb/h4jJOr49KeX6IdtimeanYatwSdIztgB1WHES02qimG3JdmV+8RjabpSBUl7+pStTAOtCzniPwy
        gQAAz7GspcXjUDu2miPPPh1bZe3w7s0v0BTNyZqnQBO/yviiRHMsV4bhobT0HCkmeivoSfv50SIFALiD
        ZS2td3A1R54MOPUWkTTKmWX7cP32b999foopR5haapqzTUETv8r4otoVnSi+9LhG0tJzlPRPX2YCArZU
        iTnRDwEAYCW/3NJM8t8rrk3L2VqdoNln9BqKqMyj2RQ08auML6peUI7iy4irHlZm9gMXA6fYTEDAltpu
        eisFAFjNr7a00ZOuVG+seWTwP/+XEDOj2jFsHs2mQPXYML6onqbiy4pLxkVXC7IfUjn/HOirK1LNtafv
        HgBgNb/6LE1V1shPU/X8tA5P7Rg2j2ZTYB3ZJeOL6mkqvq4CDspqjP2QmqSZjgK2VM9PYx4A4GaWtbR4
        grXHp/Yp+P5Z23Iep93jU/Edxotj1TyaTYFlvWJ8UVO5suPKIjNCjI6UuTHaTNRx5FAmBOJ46Vw8G7YA
        AO5gXUs7j7bid61kzKMdee7MO39dKvDtH4plv0N1kIwHmoNSO26zXzEu9EW3PWxNgdEvWoYXNZUrMy5H
        9BhQNJKjIqbzueNYZg7OoKMp83fpBhqahOASIAMAAM+ysKXl52eOO7S+wglXHV7pWPUUHwzUzsLctnZS
        Zmd7Zkn+N3Zwm4LhljaxqIlcmXF58nWrCmVIBXU76TryqEErMReNtiDZTqZsbwAAkyxtaY7yvj3+PY/j
        iGtbQvjMfXbo+ybgpxhHc1QyDkH/2iPZkr+seEwqZpgHtykQzyMtzTG8qNFc9TvNSG8ILxLz5qr+iccL
        Rwdlko2Y01Y1nLal09ZtFQDgcVa3NPhxpH90GxEAwF+AlvbuzL2EBADYGFraexPfdqSjAQDQ0t4bOhoA
        wAkt7Z2Jn+egowEAOGhpAACwCbQ0AADYBFoaAABsAi0NAAA2gZYGAACbQEsDAIBNoKUBAMAm0NIAAGAT
        aGkAALAJtDQAANgEWhoAAGwCLQ0AADaBlgYAAJtASwMAgE2gpQEAwCbQ0gAAYBNoaQAAsAm0NAAA2ARa
        GgAAbAItDQAANoGWBgAAm0BLAwCALfjf//4Pve8QqvHvx1QAAAAASUVORK5CYII=
</value>
  </data>
</root>